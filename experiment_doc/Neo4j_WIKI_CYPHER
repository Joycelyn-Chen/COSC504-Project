//CYPHER load chameleon

LOAD CSV WITH HEADERS FROM 'file:///musae_chameleon_target.csv' AS row
WITH row.id AS id, row.target AS target
MERGE (c:Chameleon {id:id})
    SET c.target = target
return id, target LIMIT 5;


//CYPHER load relationship of chameleon
LOAD CSV WITH HEADERS FROM 'file:///musae_chameleon_edges.csv' AS row
WITH row.id1 AS id1, row.id2 AS id2 
MATCH (c1:Chameleon)
MATCH (c2:Chameleon) 
WHERE c1.id=id1 AND c2.id=id2
MERGE (c1) - [rel:CON]->(c2) 
RETURN COUNT(rel);

// Crocodile order performance
//CYPHER check 1st order connections
MATCH (c:chameleon {id:'777'})-[:cham_link]-(r)
RETURN count(r);
//CYPHER check 2nd order connections - 
MATCH (c:chameleon {id:'777'})-[:cham_link]-()-[:cham_link]-(r)
RETURN count(r);
//CYPHER check 3nd order connections - 
MATCH (c:chameleon {id:'777'})-[:cham_link]-()-[:cham_link]-()-[:cham_link]-(r)
RETURN count(r);
//CYPHER check 4nd order connections - 
MATCH (c:chameleon {id:'777'})-[:cham_link]-()-[:cham_link]-()-[:cham_link]-()-[:cham_link]-(r)
RETURN count(r);
//CYPHER check 5th order connections - 
MATCH (c:chameleon {id:'777'})-[:cham_link]-()-[:cham_link]-()-[:cham_link]-()-[:cham_link]-()-[:cham_link]-(r)
RETURN count(r);
//CYPHER check 6th order connections
MATCH (c:chameleon {id:'777'})-[:cham_link]-()-[:cham_link]-()-[:cham_link]-()-[:cham_link]-()-[:cham_link]-()-[:cham_link]-(r)
RETURN count(r);


//CYPHER load crocodile
LOAD CSV WITH HEADERS FROM 'file:///musae_crocodile_target.csv' AS row
WITH row.id AS id, row.target AS target
MERGE (c:Crocodile {id:id})
    SET c.target = target
return id, target LIMIT 5;

//CYPHER load relation of crocodile.
LOAD CSV WITH HEADERS FROM 'file:///musae_crocodile_edges.csv' AS row
WITH row.id1 AS id1, row.id2 AS id2 
MATCH (c1:Crocodile)
MATCH (c2:Crocodile)
WHERE c1.id =id1 AND c2.id= id2
MERGE (c1) - [rel:CONS]->(c2)
RETURN COUNT(rel);

// Crocodile second order.
//CYPHER check 1st order connections
MATCH (c:Crocodile {id:'777'}) -[:CONS]-(r)
RETURN COUNT(r);

//CYPHER check 2nd order connections - 7ms of 522 records
MATCH (c:Crocodile {id:'777'}) - [:CONS] -()-[:CONS]-(r)
RETURN COUNT(r);
//CYPHER check 3nd order connections - 26ms of 10880 records
MATCH (c:Crocodile {id:'777'}) - [:CONS] -()-[:CONS]-()-[:CONS]-(r)
RETURN COUNT(r);
//CYPHER check 4nd order connections - 356ms of 750684 records
MATCH (c:Crocodile {id:'777'}) - [:CONS] -()-[:CONS]-()-[:CONS]-()-[:CONS]-(r)
RETURN COUNT(r);
//CYPHER check 5th order connections - can't perform and not enough memory on Mac
MATCH (c:Crocodile {id:'777'}) - [:CONS] '-()-[:CONS]-()-[:CONS]-()-[:CONS]-()-[:CONS]-(r)
RETURN COUNT(r);
21